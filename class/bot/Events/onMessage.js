const USER      =  require('../../user/user');
const botFunc   =  require('../Functions/functions');

const regStatus = true;

module.exports.onMessage = async function(){
    const logger = require('../../logs/logfunc');
    global.bot.on('message', async (msg) => {
        
        var bot  = global.bot;
        var id   = msg.from.id;
        var text = msg.text;

        // bot.sendMessage(msg.from.id, msg.text);
        console.log(0);
        var h_user =  await USER.haveUser(id);
        console.log(h_user);


        console.log(msg);
       
        logger.log("@" + msg.from.username + ": " + msg.text);

        if (h_user == 1){
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
            var USER_ACTION = await USER.userAction(id);

            if(regStatus == false){
                bot.sendMessage(id,`<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –õ–∏–¥–µ—Ä!</b>
<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞</i>`, {parse_mode: 'html'});
                return 1;
            }

            if(text == '/restart'){
                let del =  await USER.delUser(msg.from.id);
 
                if(del == true) {
                    var reg = await USER.regUser(msg.from);
                
                    if(reg == 1){
                        bot.sendMessage(id,`<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>`, {parse_mode: 'html'});
 
                        setTimeout(() => {
                         bot.sendMessage(id,`<b>C–º–æ—Ç—Ä—é —Ç—ã —Ä–µ—à–∏–ª(a) –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æüôÇ</b>`, {parse_mode: 'html'});
                        }, 1500);
     
                        setTimeout(() => {
                            
                            bot.sendMessage(id,`<i>–ö–∞–∫ —Ç–µ–±—è –ó–æ–≤—É—Ç?</i>
<i>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è</i>                        
                            `, {parse_mode: 'html'});
                        }, 1500);
     
                          await USER.setAction(id,'GET_YOUR_NAME');
                    }
                }
 
            }else if(text == '/admin') {
                if(id == '239823355' || id == '455913586' || id == '274525728') {

                    await bot.sendMessage(id,"<b>üí≠–°–æ–±–∏—Ä–∞—é –î–∞–Ω–Ω—ã–µ...</b>", {parse_mode: 'html'});                    

                    await getAppList(id);
                }
            }else if (USER_ACTION != 'DEFAULT') {
                if(text == undefined) {
                    bot.sendMessage(id,"<b>üö´–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</b>", {parse_mode: 'html'});
                }else {
                    if(USER_ACTION == 'GET_YOUR_NAME'){
                        if(!(typeof text == undefined || typeof text == "undefined")){
                            var setName = await USER.setName(id,text);
                            console.log(setName);
        
                            if(setName == true){
                                await USER.setAction(id,'GET_YOUR_YEAR_OLD');
        
                                bot.sendMessage(id, "<b>–û—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –Ω–∞–º!</b>", {parse_mode: 'html'});
        
                                setTimeout(function() {
                                    bot.sendMessage(id, "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", {parse_mode: 'html'});
                                }, 1500)
                            }
                        }else{
                            bot.sendMessage(id,"<b>‚ùå–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –î–µ–π—Å—Ç–≤—É—é—â–µ–µ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>", {parse_mode: 'html'});
                        }
                    }else if(USER_ACTION == 'GET_YOUR_YEAR_OLD'){
                        if(!(typeof text == undefined || typeof text == "undefined")){
                         
                            var setYearOld = await USER.setYearOld(id,text);
        
                            if(setYearOld){
                                await USER.setAction(id,'GET_CITY');  
                                
                                bot.sendMessage(id,"<b>C –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?</b>", {parse_mode: 'html'});
                            }
                        
                        }else{
                            bot.sendMessage(id, "<b>‚ùå–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</b>", {parse_mode: 'html'});
        
                            setTimeout(function() {
                                bot.sendMessage(id, "<b>–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?</b>", {parse_mode: 'html'});
                            }, 1000)
                        }
                    }else if(USER_ACTION == 'GET_CITY') {
                        if(!(typeof text == undefined || typeof text == "undefined")){
                            var setCity = await USER.setUserCity(id,text);
        
                            if(setCity) {
                                await USER.setAction(id,'GET_CHURCH_NAME');
        
                                setTimeout(function() {
                                    bot.sendMessage(id, "<b>–ò–∑ –∫–∞–∫–æ–π —Ç—ã –¶–µ—Ä–∫–≤–∏?</b>", {parse_mode: 'html'});
                                }, 1000)
        
                            }
        
                        }else{d
                            bot.sendMessage(id,"<b>‚ùå–û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –î–µ–π—Å—Ç–≤—É—é—â–µ–µ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>", {parse_mode: 'html'});
                        }
        
                    }else if(USER_ACTION == 'GET_CHURCH_NAME'){
                        if(!(typeof text == undefined || typeof text == "undefined")){
                            var setChurch = await USER.setUserChurch(id,text);
        
                            await USER.setAction(id,'DEFAULT');  
        
                            if(setChurch) {
                                bot.sendMessage(id,`<b>–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥üëá</b>
                                
<i>–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚úÖ–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è"</i>

<i>–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–∞–Ω–∞–ª: https://t.me/+EB93BkPL2OI0MDhi</i>
                                `, {parse_mode: 'html', disable_web_page_preview: true, reply_markup:{
                                        inline_keyboard: [
                                            [{text: '‚úÖ–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è', callback_data: 'CHECKSUB_'+id}],
                                            
                                        ]
                                    }
                                });
                            }
                        }
        
                    }else if(USER_ACTION == 'GET_PROOF_CHECK') {
                        console.log(typeof msg.photo);
        
                        if(typeof msg.photo != 'undefined') {
        
                            
                            await USER.setAction(id,'DEFAULT'); // '239823355' || id == '391024678'
        
                            bot.sendMessage(id,`<b>–£—Ä–∞–∞üî•</b> –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—á—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞, —Å–µ–π—á–∞—Å —Ç–≤–æ—è –∑–∞—è–≤–∫–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É, –æ–∂–∏–¥–∞–πüôÇ`, {parse_mode: 'html'});
        
        
                        }else {
                            bot.sendMessage(id,"<b>‚ùå–û—à–∏–±–∫–∞: –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã</b>", {parse_mode: 'html'});
                        }
        
                    }
                }
            }else if(USER_ACTION == 'DEFAULT') {
                if(text == "üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ") {
                    bot.sendMessage(msg.from.id, `
<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</b>

<i>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –±—É–¥–µ—Ç –æ—Ç—Ä–∫—ã—Ç–∞ 21-–≥–æ –º–∞—Ä—Ç–∞ 16:00 </i>

<i>–ó–∞–∫–æ–Ω—á–∏—Ç—Å—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è 23-–≥–æ –º–∞—Ä—Ç–∞ –≤ 20:00</i>

<i>–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —á—É—Ç—å –ø–æ–∑–∂–µüôå</i>

                    `,
                                        {parse_mode: 'html',disable_web_page_preview: true});
                }else if(text == 'üåê–°–æ—Ü. —Å–µ—Ç–∏') {
                    bot.sendMessage(msg.from.id, `
<b>–°–æ—Ü. —Å–µ—Ç–∏</b>

–•–µ—à—Ç–µ–≥ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ —ç—Ç–æ–º –≥–æ–¥—É ‚Äî #UCONF23
–°–º–æ—Ç—Ä–∏ –∏ –¥–µ–ª–∏—Å—å —è—Ä–∫–∏–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏ —Å –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏.

–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü.—Å–µ—Ç–∏, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ —É–ø—É—Å—Ç–∏—Ç—å.

Telegram: https://t.me/united_conf
Instagram: https://www.instagram.com/united.conf/

                `,
                                    {parse_mode: 'html',disable_web_page_preview: true});
                }else if(text == 'üî•–õ–∏–¥–µ—Ä—Å–∫–∏–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤—ã') {
                    bot.sendMessage(id,"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞—Ö, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É:", 
                    { 
                        parse_mode: 'html',
                        reply_markup:{
                            inline_keyboard:[
                                 [{text: 'üñã–ê–Ω–∫–µ—Ç–∞', url: "https://docs.google.com/forms/d/e/1FAIpQLSfSDxmyXrP815oiOr7lMXvm2eHdbpCAigrQL-pl1VTTbuXM0A/viewform?usp=sf_link"}],
                            ]
                        }
                    });
                }else if(text == '‚ùóÔ∏è–†–∞–∑–º–µ—â–µ–Ω–∏–µ') {
                    bot.sendMessage(id,`
üá∞üáø–ù–∞—à–∞ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–∏–º –≥–æ—Å—Ç–µ–ø—Ä–µ–∏–º—Å—Ç–≤–æ–º, –ø–æ—ç—Ç–æ–º—É –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ç–µ–±–µ –º–µ—Å—Ç–æ –¥–ª—è –Ω–æ—á–ª–µ–≥–∞ –≤–æ –≤—Ä–µ–º—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏üôå

–ï—Å–ª–∏ —Ç—ã –µ–¥–µ—à—å —Å –∫–æ–º–∞–Ω–¥–æ–π, —Ç–æ –ø–æ–¥–∞–π –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –ø–∞—Å—Ç–æ—Ä—É / –ª–∏–¥–µ—Ä—É, —á—Ç–æ–±—ã –æ–Ω –ø–µ—Ä–µ–¥–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º.

–ü–æ –æ—Å—Ç–∞–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ–º, –ø–∏—à–∏ <a href="https://wa.me/77077069237?text=%D0%9F%D1%80%D0%B8%D0%B2%D0%B5%D1%82!%20%F0%9F%91%8B%D1%8F%20%D0%BD%D0%B0%20%D1%81%D1%87%D0%B5%D1%82%20%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%89%D0%B5%D0%BD%D0%B8%D1%8F%20%D0%B2%D0%BE%20%D0%B2%D1%80%D0%B5%D0%BC%D1%8F%20%D0%BA%D0%BE%D0%BD%D1%84%D0%B5%D1%80%D0%B5%D0%BD%D1%86%D0%B8%D0%B8">–Æ–ª–µ –ó–µ–º—Å–∫–æ–π</a>
                    `, {parse_mode: 'html', disable_web_page_preview: true});
                }
            }
        }else{
            if(text == '/start' || text == '/start reg'){
                register(msg);
            }else{
                bot.sendMessage(id,"<b>‚ÄºÔ∏è–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /start</b>", {parse_mode: 'html'});
            }
        }
    });
}


async function register(msg) {
    return new Promise( async function(resolve, reject) {
        // –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å

        console.log(msg);
        var reg = await USER.regUser(msg.from);
        var id = msg.from.id;

        console.log('reg: ' + reg);

        if(regStatus == false){
            bot.sendMessage(id,`<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è!</b>
        <i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞</i>`, {parse_mode: 'html'});
            return 1;
        }

        if(reg == true){
        
            bot.sendMessage(id,`<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è!</b>`, {parse_mode: 'html'});

            setTimeout(() => {
                
                bot.sendMessage(id,`<i>–ö–∞–∫ —Ç–µ–±—è –ó–æ–≤—É—Ç?</i>
<i>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è</i>                        
                `, {parse_mode: 'html'});
            }, 3000);



            await USER.setAction(id,'GET_YOUR_NAME');
        }
    });
}

async function getAppList(id) {
    return new Promise(function(resolve, reject){
        setTimeout(function(){
            var req =  global.connection.query('SELECT * FROM applications WHERE STATUS = "NONE" LIMIT 10 ', async function(err,res){
                if(err) throw err;
                else{
                    if(res.length > 0){
                     await bot.sendMessage(id,`<b>–ù–∞–π–¥–µ–Ω–æ `+ res.length +` </b> –ó–∞—è–≤–æ–∫`, {parse_mode: 'html'});
                   

                       for(var i = 0; i <= res.length - 1; i++) {

                            console.log(res[i]);

                            let getUserInfo = await USER.getUserInfo(res[i].TG_ID);

                            console.log(getUserInfo)

                     
                            if(getUserInfo != 0) {
                                let info = res[i];
                                let text = `
<b>üî•–ó–∞—è–≤–∫–∞ –Ω–æ–º–µ—Ä: </b> ` + info.ID + `
<b>üî∞–ò–º—è: </b> <a href="tg://user?id=`+ info.TG_ID +`">` + info.NAME + `</a>
<b>‚ÑπÔ∏è–í–æ–∑—Ä–∞—Å—Ç: </b>` + getUserInfo.Y_OLD + `
<b>üá∞üáø–ì–æ—Ä–æ–¥: </b>` + info.CITY + `
<b>‚õ™–¶–µ—Ä–∫–æ–≤—å: </b>` + info.CHURCH + `


<b>#Ô∏è‚É£ID –≤ Telegram: </b> ` + info.TG_ID + `
<b>üìÖ–î–∞—Ç–∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ú–°–ö): </b> ` + info.REG_DATE + `
                                        `;
            
                                let opt = {
                                    parse_mode: 'html',
                                    disable_web_page_preview: true,
                                    caption: text,
                                    reply_markup:{
                                        inline_keyboard:[
                                        [{text: '‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: 'accept_' + info.ID + '_' + info.TG_ID}],
                                        [{text: '‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: 'cancel_' + info.ID + '_' + info.TG_ID}],
                                        ]
                                    }
                                }
                                const fileId = info.PHOTO_ID;
                                bot.sendPhoto(id,fileId,opt).then(function(data){
                                    console.log('photo sended');
                                });
                            }
                          

                       }

                       resolve(1)
                    }else {
                        bot.sendMessage(id,`<b>–ó–∞—è–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üôÅ</b>`, {parse_mode: 'html'});
                    }
                }
            });
        }, 2500)
    })
}